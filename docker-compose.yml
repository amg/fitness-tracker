services:
  api:
    build:
      context: ./
      dockerfile: ./Dockerfile-api
      args:
        - ENV=${ENV}
        - SECRETS_PATH=${SECRETS_PATH}
        - GOOGLE_PROJECT_ID=${GOOGLE_PROJECT_ID}
        - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
        - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
        - GOOGLE_CLIENT_CALLBACK_URL=${GOOGLE_CLIENT_CALLBACK_URL}
        - API_PORT=${API_PORT}
        - COOKIE_DOMAIN=${COOKIE_DOMAIN}
        - WEB_BASE_URL=${WEB_BASE_URL}
        - FILE_KEY_PRIVATE=${FILE_KEY_PRIVATE}
        - FILE_KEY_PUBLIC=${FILE_KEY_PUBLIC}
        # - PG_DBNAME=postgres
        # - PG_HOST=db
        # - PG_USER=postgres
        # - PG_PASSWORD=mysecretpassword
      x-bake:
        platforms:
          - linux/amd64
          - linux/arm64
    ports:
      - "${API_PORT}:${API_PORT}"
    image: "gcr.io/${GOOGLE_PROJECT_ID}/${ENV}-api" 
    # depends_on:
    #   - db
    command: go run .
    develop:
      watch:
        - action: sync+restart
          path: ./api
          target: /app
  frontend:
    build:
      context: ./
      dockerfile: Dockerfile-web
      args:
        - API_BASE_URL=${API_BASE_URL}
      x-bake:
        platforms:
          - linux/amd64
          - linux/arm64
    image: "gcr.io/${GOOGLE_PROJECT_ID}/${ENV}-web" 
    ports:
      - "${WEB_PORT}:${WEB_PORT}"
    depends_on:
      - api
    command: npm start
    develop:
      watch:
        - action: sync
          path: ./web
          target: /app
  # db:
  #   image: postgres:12-alpine
  #   restart: always
  #   environment:
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
  #   ports:
  #     - 5432:5432
  #   volumes:
  #     - db-data:/var/lib/postgresql/data
# volumes:
#   backend-cache: {}
#   db-data: {}